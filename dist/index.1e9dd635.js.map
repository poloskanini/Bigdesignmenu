{"mappings":"AAAA,MAAM,QAAQ,SAAS,gBAAgB,CAAC;AAExC,MAAM,QAAQ;AAEd,MAAM,UAAU;IACd,MAAM,IAAI;IACV,uBAAuB;IACvB,YAAY;IACZ,WAAW;AACb;AAEA,MAAM,kBAAkB,SAAS,OAAO,EAAE,QAAQ,EAAE;IAClD,QAAQ,OAAO,CAAC,SAAS,KAAK,EAAE;QAC9B,IAAI,MAAM,iBAAiB,GAAG,OAAO;YACnC,MAAM,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC;YAC3B,SAAS,SAAS,CAAC,MAAM,MAAM;QACjC,CAAC;IACH;AACF;AAEA,MAAM,WAAW,IAAI,qBAAqB,iBAAiB;AAC3D,SAAS,gBAAgB,CAAC,SAAS,OAAO,CAAC,SAAS,CAAC,EAAE;IACrD,SAAS,OAAO,CAAC;AACnB,GAEA,qEAAqE;CACrE,+BAA+B;CAC/B,iCAAiC;CACjC,mCAAmC;CACnC,+CAA+C;CAC/C,QAAQ;CACR,OAAO;CACP,KAAK;CAEL,4BAA4B;CAC5B,4BAA4B;CAC5B,MAAM","sources":["WebProjects/Contra Hover Effect/script.js"],"sourcesContent":["const items = document.querySelectorAll('.item');\n\nconst ratio = .9;\n\nconst options = {\n  root: null,\n  // rootMargin: '-50px',\n  rootMargin: '-40px',\n  threshold: ratio\n}\n\nconst handleIntersect = function(entries, observer) {\n  entries.forEach(function(entry) {\n    if (entry.intersectionRatio > ratio) {\n      entry.target.classList.add('visible');\n      observer.unobserve(entry.target);\n    }\n  })\n}\n\nconst observer = new IntersectionObserver(handleIntersect, options);\ndocument.querySelectorAll('.item').forEach(function(r) {\n  observer.observe(r);\n})\n\n// const observer = new IntersectionObserver((entries, observer) => {\n//   entries.forEach(entry => {\n//     if(entry.isIntersecting) {\n//       console.log(entry.target);\n//       entry.target.classList.add('visible');\n//     }\n//   })\n// })\n\n// items.forEach((item) => {\n//   observer.observe(item);\n// });"],"names":[],"version":3,"file":"index.1e9dd635.js.map","sourceRoot":"/__parcel_source_root/"}